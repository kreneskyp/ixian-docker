RUN apt-get install -y \
        build-essential \
        libblas-dev \
        libfreetype6-dev \
        libffi-dev \
        liblapack-dev \
        libldap2-dev \
        libpng-dev \
        libpq-dev \
        libsasl2-dev \
        libssl-dev \
        libxml2-dev \
        libxslt-dev \
        pkg-config \
        python3 \
        python3.6-dev \
        python3-pip

RUN pip3 install \
    pipenv

# Environment
ENV PYTHON_VERSION 3.6
ENV PYTHONUNBUFFERED 1
ENV LC_ALL C.UTF-8
ENV LANG C.UTF-8s

# Pipenv / Virtualenv
ENV PYTHONPATH $PROJECT_DIR
ENV PIPENV_SHELL_FANCY 1
ENV PIPENV_VENV_IN_PROJECT 1
ENV PIPENV_NOSPIN 1

# Pipfile needs to be added instead of symlinked. Pipenv follows symlinks and
# creates the pipenv in the directory where the Pipfile is located. The Pipfile
# will be mounted in for docker-compose in local environments.
ADD Pipfile $APP_DIR
RUN ln -s $PROJECT_DIR/Pipfile.lock $APP_DIR

RUN pipenv --python $PYTHON_VERSION

{% if CONFIG.ENV == 'PRODUCTION' %}
# Install packages - This is skipped in DEV builds because they may include
# local-third-party packages. Those packages are installed using mounted
# volumes and are not accessible to docker build.
# TODO add check for local packages?
RUN pipenv install
{% endif %}

# Always enable the pipenv when running commands
ENTRYPOINT ["pipenv", "run"]
